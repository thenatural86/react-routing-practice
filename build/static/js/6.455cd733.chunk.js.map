{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntered","setIsEntered","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yGCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCkE/BC,EA9DG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBAErB,EAAkCE,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAqBA,OACE,qCACE,cAAC,IAAD,CACEC,KAAMF,EACNG,QAAS,SAACC,GAAD,MAAc,qCAEzB,cAAC,EAAD,UACE,uBACEC,QAhBiB,WACvBJ,GAAa,IAgBPV,UAAWC,IAAQc,KACnBC,SA7BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAkB5C,UAKGvB,EAAM2B,WACL,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK5B,OAEtC,sBAAKL,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK1B,OAEpC,qBAAKP,UAAWC,IAAQkC,QAAxB,SACE,wBAAQC,QA/BY,WAC5B1B,GAAa,IA8BmCV,UAAU,MAAlD,kCC7BGqC,UAxBE,WACf,IAAMC,EAAUC,cAChB,EAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAErBC,qBAAU,WACO,cAAXD,GACFL,EAAQO,KAAK,aAEd,CAACF,EAAQL,IAKZ,OACE,gCACE,gDACA,cAAC,EAAD,CACEZ,UAAsB,YAAXiB,EACXpB,WARkB,SAACuB,GACvBJ,EAAYI","file":"static/js/6.455cd733.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react'\nimport { Prompt } from 'react-router-dom'\n\nimport Card from '../UI/Card'\nimport LoadingSpinner from '../UI/LoadingSpinner'\nimport classes from './QuoteForm.module.css'\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef()\n  const textInputRef = useRef()\n\n  const [isEntered, setIsEntered] = useState(false)\n\n  function submitFormHandler(event) {\n    event.preventDefault()\n\n    const enteredAuthor = authorInputRef.current.value\n    const enteredText = textInputRef.current.value\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText })\n  }\n\n  const formFocusHandler = () => {\n    setIsEntered(true)\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntered(false)\n  }\n\n  return (\n    <>\n      <Prompt\n        when={isEntered}\n        message={(location) => 'Are you sure you want to leave?'}\n      />\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  )\n}\n\nexport default QuoteForm\n","import { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport useHttp from '../hooks/use-http'\nimport { addQuote } from '../lib/api'\nimport QuoteForm from '../components/quotes/QuoteForm'\n\nconst NewQuote = () => {\n  const history = useHistory()\n  const { sendRequest, status } = useHttp(addQuote)\n\n  useEffect(() => {\n    if (status === 'completed') {\n      history.push('/quotes')\n    }\n  }, [status, history])\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData)\n  }\n  return (\n    <div>\n      <h1>New Quote Page</h1>\n      <QuoteForm\n        isLoading={status === 'pending'}\n        onAddQuote={addQuoteHandler}\n      />\n    </div>\n  )\n}\n\nexport default NewQuote\n"],"sourceRoot":""}